#!/usr/bin/perl
use strict;
use warnings;

use Socket;

my %config = ();
my %exec = ();
my %route = ();
my $nbTotalClient = 0;
my @children = ();

sub verifConfig {
    $config{"logfile"} and $config{"clients"} and $config {"port"} and $config{"error"} and $config{"index"} or die "Missing config parameter\n" ;
	keys(%route) and values(%route) or die "Missing config parameter";
	keys(%exec) and values(%exec) or die "Missing config parameter\n";
}

sub initConfig {
    open(CONFIG, "./comanche.conf") or die ("Error openning config file\n");
    my @param = ();
    while(<CONFIG>){
        if(/set\ */){
            @param = split / /, $_;
            $config{$param[1]} = $param[2];
        }
		if(/route\ */){	
			@param = split / /,$_;
			$route{$param[1]} = $param[3];
		}	
        if(/exec\ */){
            @param = split / /, $_;
            $exec{$param[1]} = $param[3];
        }
    }
    verifConfig();
    close(CONFIG);
}

sub parseRequest {
    my @param = ();
    my $path = "";
    while(<CLIENT>){
        if($. == 1){
            @param = split / /, $_;
            $param[0] eq "GET" or die "Invalid Method\n";
            $path = $param[1];
            $param[2] eq "HTTP/1.1\r\n" or die "HTTP Version not supported\n"; 
        }elsif($_ eq "\r\n"){
            return $path;
        }
    }
    die "Error parsing request\n";
}

initConfig();

socket(SERVEUR, PF_INET, SOCK_STREAM, getprotobyname("tcp")) or die ("Cr√©ation impossible");
setsockopt(SERVEUR, SOL_SOCKET, SO_REUSEADDR, 1);
my $adresse_complete = sockaddr_in($config{"port"}, INADDR_ANY) or die("sockaddr");
bind(SERVEUR, $adresse_complete) or die("bind");
listen(SERVEUR, 10) or die("listen");

while(1){
    accept(CLIENT,SERVEUR);
    if($nbTotalClient <= $config{"clients"}){
        $nbTotalClient++;
        push @children, fork();
        if($children[-1] == 0){
            print parseRequest();
            close(CLIENT);
            exit(0);
        }
    }else {
        # Erreur 503
    }
    close(CLIENT);
}
